!pip install ultralytics

import ultralytics

from ultralytics import YOLO
import os
from PIL import Image
import cv2
from IPython.display import Video
import glob
import matplotlib.pyplot as plt

import warnings
warnings.filterwarnings('ignore')


ultralytics.checks()

!wget # загрузите свой датасет
!unzip -qo "если zip-файл"
После этого указывается путь к файлу конфигурации данных:

yaml_path = '/content/car/data.yaml'

model = YOLO('yolo11s.pt')

results = model.train(
    data=yaml_path,   # путь к конфигурационному файлу
    epochs=15,        # число эпох
    batch=32,         # размер пакета
    imgsz=640,        # размер входного изображения
    plots= True       # сохранять графики
)

def result_train(path):
    img = cv2.imread(path)
    plt.figure(figsize=(10,10), dpi= 200)
    plt.imshow(img)

data_dir = "./runs/detect/train"
img_dir = os.path.join(data_dir, 'train_batch*.jpg')
files = glob.glob(img_dir)
imgs = []
for image in files:
    result_train(image)

img_dir = os.path.join(data_dir, 'confusion_matrix_normalized.png')

result_train(img_dir)

data_dir = "./runs/detect/train"
img_dir = os.path.join(data_dir, '*curve*.png')
files = glob.glob(img_dir)
imgs = []
for image in files:
    result_train(image)

%load_ext tensorboard
%tensorboard --logdir='./runs/detect/train'

example_video_path = '/content/video.mp4'

video_output = model.predict(source=example_video_path, conf=0.6, save=True)

from moviepy.editor import *

path="./runs/detect/train2/video.avi"

clip=VideoFileClip(path)
clip.ipython_display(width=960)
